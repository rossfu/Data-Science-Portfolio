import pandas as pd
import numpy as np
import time

# DLA HAR dataset:
# http://groupware.les.inf.puc-rio.br/har
# http://groupware.les.inf.puc-rio.br/static/har/dataset-har-PUC-Rio-ugulino.zip

# TODO: Load up the dataset into dataframe 'X'
X = pd.read_csv('Datasets/dataset-har-PUC-Rio-ugulino.csv', delimiter=';', decimal=',')

# TODO: Encode the gender column, 0 as male, 1 as female
X.gender = X.gender.map({'Man': 0, 'Woman': 1})

# INFO: Check data types
print(X.dtypes)

# TODO: Convert any column that needs to be converted into numeric
# use errors='raise'. This will alert you if something ends up being
# problematic

columns = X.columns.values
print(X[pd.isnull(X).any(axis=1)])

X.z4 = pd.to_numeric(X.z4, errors='coerce')
X = X.dropna(axis=0)

# TODO: Encode your 'y' value as a dummies version of your dataset's "class" column
y = X.loc[:, 'class']
X = X.drop(labels=['class', 'user'], axis=1)

# TODO: Get rid of the user and class columns
y = pd.get_dummies(y)
print(X.describe())

# TODO: Create an RForest classifier 'model' and set n_estimators=30,
# the max_depth to 10, and oob_score=True, and random_state=0
from sklearn.ensemble import RandomForestClassifier
model = RandomForestClassifier(n_estimators=30, max_depth=10, oob_score=True, random_state=0)

# TODO: Split your data into test / train sets
# Your test size can be 30% with random_state 7
# Use variable names: X_train, X_test, y_train, y_test

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=7)

print('Fitting...')
s = time.time()
#
# TODO: train your model on your training set
#
# .. your code here ..
model = model.fit(X_train, y_train)

print('Fitting completed in: ', time.time() - s)

#Display the OOB Score of your data
score = model.oob_score_
print('OOB Score: ', round(score*100, 3))

print('Scoring...')
s = time.time()

# TODO: score your model on your test set
score = model.score(X_test, y_test)
print('Score: ', round(score*100, 3))
print('Scoring completed in: ', time.time() - s)

# TODO: Answer the lab questions
